{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/providers/barcode/barcode.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 110;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 110\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 151;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 151\n// module chunks = 0","/*\r\n* Copyright (C) 2018 Zebra Technologies Corp\r\n* All rights reserved.\r\n*/\r\nimport { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\nimport { ChangeDetectorRef } from '@angular/core';\r\nimport { BarcodeProvider } from '../../providers/barcode/barcode';\r\nimport { Events } from 'ionic-angular';\r\nimport { AlertController } from 'ionic-angular';\r\nimport { Platform } from 'ionic-angular';\r\nimport { Device } from '@ionic-native/device';\r\nimport { ToastController } from 'ionic-angular';\r\n\r\n@Component({\r\n  selector: 'page-home',\r\n  templateUrl: 'home.html',\r\n  providers: [BarcodeProvider, Device]\r\n})\r\nexport class HomePage {\r\n\r\n  private scans = [];\r\n  private scanners = [{ \"SCANNER_NAME\": \"Please Wait...\", \"SCANNER_INDEX\": 0, \"SCANNER_CONNECTION_STATE\": true }];\r\n  private selectedScanner = \"Please Select...\";\r\n  private selectedScannerId = -1;\r\n  private ean8Decoder = true;   //  Model for decoder\r\n  private ean13Decoder = true;  //  Model for decoder\r\n  private code39Decoder = true; //  Model for decoder\r\n  private code128Decoder = true;//  Model for decoder\r\n  private dataWedgeVersion = \"Pre 6.3. Please create & configure profile manually.  See the ReadMe for more details.\";\r\n  private availableScannersText = \"Requires Datawedge 6.3+\"\r\n  private activeProfileText = \"Requires Datawedge 6.3+\";\r\n  private commandResultText = \"Messages from DataWedge will go here\";\r\n  private uiHideDecoders = true;\r\n  private uiDatawedgeVersionAttention = true;\r\n  private uiHideSelectScanner = true;\r\n  private uiHideShowAvailableScanners = false;\r\n  private uiHideCommandMessages = true;\r\n  private uiHideFloatingActionButton = true;\r\n\r\n  public constructor(public navCtrl: NavController, private barcodeProvider: BarcodeProvider,\r\n    public events: Events, private changeDetectorRef: ChangeDetectorRef, private device: Device,\r\n    private alertController: AlertController, private platform: Platform, private toastController: ToastController) {\r\n\r\n    this.platform.ready().then((readySource) => {\r\n\r\n      //  Check manufacturer.  Exit if this app is not running on a Zebra device\r\n      console.log(\"Device manufacturer is: \" + this.device.manufacturer);\r\n      if (!(this.device.manufacturer.toLowerCase().includes(\"zebra\") || this.device.manufacturer.toLowerCase().includes(\"motorola solutions\"))) {\r\n        let alert = this.alertController.create({\r\n          title: 'Requires Zebra device',\r\n          subTitle: 'This application requires a Zebra mobile device in order to run',\r\n          cssClass: 'nonZebraAlert',\r\n          buttons: [{\r\n            text: 'Close app',\r\n            handler: data => {\r\n              console.log('Closing application since we are not running on a Zebra device');\r\n              platform.exitApp();\r\n            }\r\n          }]\r\n        });\r\n        alert.present();\r\n      }\r\n\r\n      //  Determine the version.  We can add additional functionality if a more recent version of the DW API is present\r\n      this.barcodeProvider.sendCommand(\"com.symbol.datawedge.api.GET_VERSION_INFO\", \"\");\r\n\r\n      ////////////////////////////\r\n      //  EVENT HANDLING\r\n      ////////////////////////////\r\n\r\n      //  6.3 DataWedge APIs are available\r\n      events.subscribe('status:dw63ApisAvailable', (isAvailable) => {\r\n        console.log(\"DataWedge 6.3 APIs are available\");\r\n        //  We are able to create the profile under 6.3.  If no further version events are received, notify the user\r\n        //  they will need to create the profile manually\r\n        this.barcodeProvider.sendCommand(\"com.symbol.datawedge.api.CREATE_PROFILE\", \"ZebraIonicDemo\");\r\n        this.dataWedgeVersion = \"6.3.  Please configure profile manually.  See the ReadMe for more details.\";\r\n\r\n        //  Although we created the profile we can only configure it with DW 6.4.\r\n        this.barcodeProvider.sendCommand(\"com.symbol.datawedge.api.GET_ACTIVE_PROFILE\", \"\");\r\n\r\n        //  Enumerate the available scanners on the device\r\n        this.barcodeProvider.sendCommand(\"com.symbol.datawedge.api.ENUMERATE_SCANNERS\", \"\");\r\n\r\n        //  Functionality of the FAB is available so display the button\r\n        this.uiHideFloatingActionButton = false;\r\n\r\n        this.changeDetectorRef.detectChanges();\r\n      });\r\n\r\n      //  6.4 Datawedge APIs are available\r\n      events.subscribe('status:dw64ApisAvailable', (isAvailable) => {\r\n        console.log(\"DataWedge 6.4 APIs are available\");\r\n\r\n        //  Documentation states the ability to set a profile config is only available from DW 6.4.\r\n        //  For our purposes, this includes setting the decoders and configuring the associated app / output params of the profile.\r\n        this.dataWedgeVersion = \"6.4\";\r\n        this.uiDatawedgeVersionAttention = false;\r\n        this.uiHideDecoders = !isAvailable;\r\n\r\n        //  Configure the created profile (associated app and keyboard plugin)\r\n        let profileConfig = {\r\n          \"PROFILE_NAME\": \"ZebraIonicDemo\",\r\n          \"PROFILE_ENABLED\": \"true\",\r\n          \"CONFIG_MODE\": \"UPDATE\",\r\n          \"PLUGIN_CONFIG\": {\r\n            \"PLUGIN_NAME\": \"BARCODE\",\r\n            \"RESET_CONFIG\": \"true\",\r\n            \"PARAM_LIST\": {}\r\n          },\r\n          \"APP_LIST\": [{\r\n            \"PACKAGE_NAME\": \"com.zebra.zebraionicdemo\",\r\n            \"ACTIVITY_LIST\": [\"*\"]\r\n          }]\r\n        };\r\n        this.barcodeProvider.sendCommand(\"com.symbol.datawedge.api.SET_CONFIG\", profileConfig);\r\n\r\n        //  Configure the created profile (intent plugin)\r\n        let profileConfig2 = {\r\n          \"PROFILE_NAME\": \"ZebraIonicDemo\",\r\n          \"PROFILE_ENABLED\": \"true\",\r\n          \"CONFIG_MODE\": \"UPDATE\",\r\n          \"PLUGIN_CONFIG\": {\r\n            \"PLUGIN_NAME\": \"INTENT\",\r\n            \"RESET_CONFIG\": \"true\",\r\n            \"PARAM_LIST\": {\r\n              \"intent_output_enabled\": \"true\",\r\n              \"intent_action\": \"com.zebra.ionicdemo.ACTION\",\r\n              \"intent_delivery\": \"2\"\r\n            }\r\n          }\r\n        };\r\n        this.barcodeProvider.sendCommand(\"com.symbol.datawedge.api.SET_CONFIG\", profileConfig2);\r\n\r\n        //  Give some time for the profile to settle then query its value\r\n        setTimeout(function () {\r\n          barcodeProvider.sendCommand(\"com.symbol.datawedge.api.GET_ACTIVE_PROFILE\", \"\");\r\n        }, 1000);\r\n\r\n        this.changeDetectorRef.detectChanges();\r\n      });\r\n\r\n      //  6.5 Datawedge APIs are available\r\n      events.subscribe('status:dw65ApisAvailable', (isAvailable) => {\r\n        console.log(\"DataWedge 6.5 APIs are available\");\r\n\r\n        //  The ability to switch to a new scanner is only available from DW 6.5 onwards\r\n        //  Reconfigure UI so the user can choose the desired scanner\r\n        this.uiHideSelectScanner = false;\r\n        this.uiHideShowAvailableScanners = true;\r\n\r\n        //  6.5 also introduced messages which are received from the API to indicate success / failure\r\n        this.uiHideCommandMessages = false;\r\n        this.barcodeProvider.requestResult(true);\r\n        this.dataWedgeVersion = \"6.5 or higher\";\r\n        this.changeDetectorRef.detectChanges();\r\n      });\r\n\r\n      //  Response to our request to find out the active DW profile\r\n      events.subscribe('data:activeProfile', (activeProfile) => {\r\n        console.log(\"Active profile: \" + activeProfile);\r\n\r\n        //  Update the UI\r\n        this.activeProfileText = activeProfile;\r\n\r\n        this.changeDetectorRef.detectChanges();\r\n      });\r\n\r\n      //  The result (success / failure) of our last API call along with additional information\r\n      events.subscribe('data:commandResult', (commandResult) => {\r\n        this.commandResultText = commandResult;\r\n        this.changeDetectorRef.detectChanges();\r\n      });\r\n\r\n      //  Response to our requet to enumerte the scanners\r\n      events.subscribe('data:enumeratedScanners', (enumeratedScanners) => {\r\n        //  Maintain two lists, the first for devices which support DW 6.5+ and shows a combo box to select\r\n        //  the scanner to use.  The second will just display the available scanners in a list and be available\r\n        //  for 6.4 and below\r\n        this.scanners = enumeratedScanners;\r\n        this.scanners.unshift({\"SCANNER_NAME\": \"Please Select...\", \"SCANNER_INDEX\":-1, \"SCANNER_CONNECTION_STATE\":false});\r\n        let humanReadableScannerList = \"\";\r\n        enumeratedScanners.forEach((scanner, index) => {\r\n          console.log(\"Scanner found: name= \" + scanner.SCANNER_NAME + \", id=\" + scanner.SCANNER_INDEX + \", connected=\" + scanner.SCANNER_CONNECTION_STATE);\r\n          humanReadableScannerList += scanner.SCANNER_NAME;\r\n          if (index < enumeratedScanners.length - 1)\r\n            humanReadableScannerList += \", \";\r\n        });\r\n        this.availableScannersText = humanReadableScannerList;\r\n        this.changeDetectorRef.detectChanges();\r\n      });\r\n\r\n      //  A scan has been received\r\n      events.subscribe('data:scan', (scanData, time) => {\r\n        //  Update the list of scanned barcodes\r\n        let scannedData = scanData.extras[\"com.symbol.datawedge.data_string\"];\r\n        let scannedType = scanData.extras[\"com.symbol.datawedge.label_type\"];\r\n        this.scans.unshift({ \"data\": scannedData, \"type\": scannedType, \"timeAtDecode\": time });\r\n\r\n        //  On older devices, if a scan is received we can assume the profile was correctly configured manually\r\n        //  so remove the yellow highlight.\r\n        this.uiDatawedgeVersionAttention = false;\r\n\r\n        this.changeDetectorRef.detectChanges();\r\n      });\r\n\r\n    });\r\n\r\n  }\r\n\r\n  //  Function to handle changes in the decoder checkboxes.  \r\n  //  Note: SET_CONFIG only available on DW 6.4+ per the docs\r\n  public setDecoders() {\r\n    var paramList = {\r\n      \"scanner_selection\": \"auto\",\r\n      \"decoder_ean8\": \"\" + this.ean8Decoder,\r\n      \"decoder_ean13\": \"\" + this.ean13Decoder,\r\n      \"decoder_code128\": \"\" + this.code128Decoder,\r\n      \"decoder_code39\": \"\" + this.code39Decoder\r\n    }\r\n    //  The \"scanner_selection\" parameter supports \"auto\" to apply to the default scanner.\r\n    //  If we have selected a different scanner we need to ensure the settings are applied\r\n    //  to the correct scanner by specifying \"current-device-id\".  See http://techdocs.zebra.com/datawedge/6-7/guide/api/setconfig/\r\n    //  for more information.  selectedScannerId will be >-1 if the user has chosen a specific scanner.\r\n    if (this.selectedScannerId > -1)\r\n    {\r\n      paramList[\"current-device-id\"] = \"\" + this.selectedScannerId;\r\n      delete paramList[\"scanner_selection\"];\r\n    }\r\n    //  Set the new configuration\r\n    let profileConfig = {\r\n      \"PROFILE_NAME\": \"ZebraIonicDemo\",\r\n      \"PROFILE_ENABLED\": \"true\",\r\n      \"CONFIG_MODE\": \"UPDATE\",\r\n      \"PLUGIN_CONFIG\": {\r\n        \"PLUGIN_NAME\": \"BARCODE\",\r\n        \"PARAM_LIST\": paramList\r\n      }\r\n    };\r\n    this.barcodeProvider.sendCommand(\"com.symbol.datawedge.api.SET_CONFIG\", profileConfig);\r\n  }\r\n\r\n  //  Function to handle the user selecting a new scanner\r\n  //  Note: SWITCH_SCANNER only available on DW 6.5+\r\n  public scannerSelected() {\r\n    console.log(\"Requested scanner is: \" + this.selectedScanner);\r\n    let localScannerIndex = 0;\r\n    let localScannerName = \"\";\r\n    for (let scanner of this.scanners) {\r\n      //  The current scanner will be returned as SCANNER_CONNECTION_STATE\r\n      if (scanner.SCANNER_NAME == this.selectedScanner) {\r\n        localScannerIndex = scanner.SCANNER_INDEX;\r\n        localScannerName = scanner.SCANNER_NAME;\r\n      }\r\n    }\r\n    if (this.selectedScannerId == localScannerIndex || localScannerIndex < 0) {\r\n      console.log(\"Not switching scanner, new scanner ID == old scanner ID\");\r\n      let toast = this.toastController.create({\r\n        message: 'Invalid scanner selection',\r\n        position: 'bottom',\r\n        duration:3000\r\n      });\r\n      toast.present();\r\n      return;\r\n    }\r\n    this.selectedScanner = localScannerName;\r\n    this.selectedScannerId = localScannerIndex;\r\n    this.barcodeProvider.sendCommand(\"com.symbol.datawedge.api.SWITCH_SCANNER\", localScannerIndex + \"\");\r\n    //  Enumerate the scanner - this will update the actual scanner in use so we do not have to worry about whether SWITCH_SCANNER succeeded\r\n    this.barcodeProvider.sendCommand(\"com.symbol.datawedge.api.ENUMERATE_SCANNERS\", \"\");\r\n  }\r\n\r\n  //  Function to handle the floating action button onDown.  Start a soft scan.\r\n  public fabDown() {\r\n    this.barcodeProvider.sendCommand(\"com.symbol.datawedge.api.SOFT_SCAN_TRIGGER\", \"START_SCANNING\");\r\n  }\r\n\r\n  //  Function to handle the floating action button onUp.  Cancel any soft scan in progress.\r\n  public fabUp() {\r\n    this.barcodeProvider.sendCommand(\"com.symbol.datawedge.api.SOFT_SCAN_TRIGGER\", \"STOP_SCANNING\");\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","/*\r\n* Copyright (C) 2018 Zebra Technologies Corp\r\n* All rights reserved.\r\n*/\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Events } from 'ionic-angular';\r\nimport { Platform } from 'ionic-angular';\r\n\r\n@Injectable()\r\nexport class BarcodeProvider {\r\n\r\n  private requestResultCodes = \"false\";\r\n\r\n  constructor(public events: Events, private platform: Platform) {\r\n    this.platform.ready().then((readySource) => {\r\n\r\n      let constructorInstance = this;\r\n\r\n      //  The Datawedge service will respond via implicit broadcasts intents.  \r\n      //  Responses may be the result of calling the Datawedge API or may be because a barcode was scanned\r\n      //  Set up a broadcast receiver to listen for incoming scans\r\n      (<any>window).plugins.intentShim.registerBroadcastReceiver({\r\n        filterActions: [\r\n          'com.zebra.ionicdemo.ACTION',           //  Response from scan (needs to match value in output plugin)\r\n          'com.symbol.datawedge.api.RESULT_ACTION'//  Response from DataWedge service (as defined by API)\r\n        ],\r\n        filterCategories: [\r\n          'android.intent.category.DEFAULT'\r\n        ]\r\n      },\r\n        function (intent) {\r\n          //  Broadcast received\r\n          console.log('Received Intent: ' + JSON.stringify(intent.extras));\r\n  \r\n          //  Emit a separate event for the result associated with this scan.  This will only be present in response to\r\n          //  API calls which included a SEND_RESULT extra\r\n          if (intent.extras.hasOwnProperty('RESULT_INFO')) {\r\n            let commandResult = intent.extras.RESULT + \" (\" +\r\n              intent.extras.COMMAND.substring(intent.extras.COMMAND.lastIndexOf('.') + 1, intent.extras.COMMAND.length) + \")\";  // + JSON.stringify(intent.extras.RESULT_INFO);\r\n            constructorInstance.events.publish('data:commandResult', commandResult.toLowerCase());\r\n          }\r\n  \r\n          if (intent.extras.hasOwnProperty('com.symbol.datawedge.api.RESULT_GET_VERSION_INFO')) {\r\n            //  The version has been returned (DW 6.3 or higher).  Includes the DW version along with other subsystem versions e.g MX  \r\n            var versionInfo = intent.extras['com.symbol.datawedge.api.RESULT_GET_VERSION_INFO'];\r\n            console.log('Version Info: ' + JSON.stringify(versionInfo));\r\n            let datawedgeVersion = versionInfo['DATAWEDGE'];\r\n            console.log(\"Datawedge version: \" + datawedgeVersion);\r\n  \r\n            //  Fire events sequentially so the application can gracefully degrade the functionality available on earlier DW versions\r\n            if (datawedgeVersion >= \"6.3\")\r\n              constructorInstance.events.publish('status:dw63ApisAvailable', true);\r\n            if (datawedgeVersion >= \"6.4\")\r\n              constructorInstance.events.publish('status:dw64ApisAvailable', true);\r\n            if (datawedgeVersion >= \"6.5\")\r\n              constructorInstance.events.publish('status:dw65ApisAvailable', true);\r\n          }\r\n          else if (intent.extras.hasOwnProperty('com.symbol.datawedge.api.RESULT_ENUMERATE_SCANNERS')) {\r\n            //  Return from our request to enumerate the available scanners\r\n            let enumeratedScanners = intent.extras['com.symbol.datawedge.api.RESULT_ENUMERATE_SCANNERS'];\r\n            constructorInstance.events.publish('data:enumeratedScanners', enumeratedScanners);\r\n          }\r\n          else if (intent.extras.hasOwnProperty('com.symbol.datawedge.api.RESULT_GET_ACTIVE_PROFILE')) {\r\n            //  Return from our request to obtain the active profile\r\n            let activeProfile = intent.extras['com.symbol.datawedge.api.RESULT_GET_ACTIVE_PROFILE'];\r\n            constructorInstance.events.publish('data:activeProfile', activeProfile);\r\n          }\r\n          else if (!intent.extras.hasOwnProperty('RESULT_INFO')) {\r\n            //  A barcode has been scanned\r\n            constructorInstance.events.publish('data:scan', intent, new Date().toLocaleTimeString());\r\n          }\r\n        }\r\n      );\r\n\r\n    });\r\n\r\n  }\r\n\r\n  //  Control whether or not to include the SEND_RESULT extra in our commands to request DW send the\r\n  //  result back to us.  Only available in DW6.5+\r\n  requestResult(requestCodes: boolean) {\r\n    this.requestResultCodes = \"\" + requestCodes;\r\n  }\r\n\r\n  //  Send a broadcast intent to the DW service which is present on all Zebra devcies.\r\n  //  This functionality requires DW6.3+ as that is the version where the com.symbol.datawedge.api.ACTION\r\n  //  was introduced.\r\n  //  extraValue may be a String or a Bundle\r\n  sendCommand(extraName: string, extraValue) {\r\n    console.log(\"Sending Command: \" + extraName + \", \" + JSON.stringify(extraValue));\r\n    (<any>window).plugins.intentShim.sendBroadcast({\r\n      action: 'com.symbol.datawedge.api.ACTION',\r\n      extras: {\r\n        [extraName]: extraValue,\r\n        \"SEND_RESULT\": this.requestResultCodes\r\n      }\r\n    },\r\n      function () { },  //  Success in sending the intent, not success of DW to process the intent.\r\n      function () { }   //  Failure in sending the intent, not failure of DW to process the intent.\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/barcode/barcode.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\n\r\nimport { MyApp } from './app.component';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { BarcodeProvider } from '../providers/barcode/barcode';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    HomePage\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    IonicModule.forRoot(MyApp)\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    HomePage\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\r\n    BarcodeProvider\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\r\nimport { Platform } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\nimport { HomePage } from '../pages/home/home';\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n  rootPage:any = HomePage;\r\n\r\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\r\n    platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      statusBar.styleDefault();\r\n      splashScreen.hide();\r\n    });\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}